[{"authors":["Martin Wanjiru"],"categories":null,"content":"I am a Data Analyst who defines data as the new oil. I appreciate the crucial role data plays in aiding the management of a business to make data-driven business decisions. For this reason, I take pride in being among the team that uses business data for analysis to draw insights and present findings to the business management team in my current organization. I strive to learn and incorporate new and more effective ways of solving business problems using data.\n","date":1554595200,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":1554595200,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"/author/martin-wanjiru/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/martin-wanjiru/","section":"authors","summary":"I am a Data Analyst who defines data as the new oil. I appreciate the crucial role data plays in aiding the management of a business to make data-driven business decisions.","tags":null,"title":"Martin Wanjiru","type":"authors"},{"authors":["Martin Wanjiru"],"categories":null,"content":"吳恩達 is a professor of artificial intelligence at the Stanford AI Lab. His research interests include distributed robotics, mobile computing and programmable matter. He leads the Robotic Neurobiology group, which develops self-reconfiguring robots, systems of self-organizing robots, and mobile sensor networks.\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Sed neque elit, tristique placerat feugiat ac, facilisis vitae arcu. Proin eget egestas augue. Praesent ut sem nec arcu pellentesque aliquet. Duis dapibus diam vel metus tempus vulputate.\n","date":-62135596800,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":-62135596800,"objectID":"da99cb196019cc5857b9b3e950397ca9","permalink":"/author/%E5%90%B3%E6%81%A9%E9%81%94/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/%E5%90%B3%E6%81%A9%E9%81%94/","section":"authors","summary":"吳恩達 is a professor of artificial intelligence at the Stanford AI Lab. His research interests include distributed robotics, mobile computing and programmable matter. He leads the Robotic Neurobiology group, which develops self-reconfiguring robots, systems of self-organizing robots, and mobile sensor networks.","tags":null,"title":"吳恩達","type":"authors"},{"authors":null,"categories":null,"content":"Flexibility This feature can be used for publishing content such as:\n Online courses Project or software documentation Tutorials  The courses folder may be renamed. For example, we can rename it to docs for software/project documentation or tutorials for creating an online course.\nDelete tutorials To remove these pages, delete the courses folder and see below to delete the associated menu link.\nUpdate site menu After renaming or deleting the courses folder, you may wish to update any [[main]] menu links to it by editing your menu configuration at config/_default/menus.toml.\nFor example, if you delete this folder, you can remove the following from your menu configuration:\n[[main]] name = \u0026quot;Courses\u0026quot; url = \u0026quot;courses/\u0026quot; weight = 50  Or, if you are creating a software documentation site, you can rename the courses folder to docs and update the associated Courses menu configuration to:\n[[main]] name = \u0026quot;Docs\u0026quot; url = \u0026quot;docs/\u0026quot; weight = 50  Update the docs menu If you use the docs layout, note that the name of the menu in the front matter should be in the form [menu.X] where X is the folder name. Hence, if you rename the courses/example/ folder, you should also rename the menu definitions in the front matter of files within courses/example/ from [menu.example] to [menu.\u0026lt;NewFolderName\u0026gt;].\n","date":1536451200,"expirydate":-62135596800,"kind":"section","lang":"en","lastmod":1536451200,"objectID":"59c3ce8e202293146a8a934d37a4070b","permalink":"/courses/example/","publishdate":"2018-09-09T00:00:00Z","relpermalink":"/courses/example/","section":"courses","summary":"Learn how to use Academic's docs layout for publishing online courses, software documentation, and tutorials.","tags":null,"title":"Overview","type":"docs"},{"authors":null,"categories":null,"content":"In this tutorial, I\u0026rsquo;ll share my top 10 tips for getting started with Academic:\nTip 1 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus. Vestibulum sit amet erat at nulla eleifend gravida.\nNullam vel molestie justo. Curabitur vitae efficitur leo. In hac habitasse platea dictumst. Sed pulvinar mauris dui, eget varius purus congue ac. Nulla euismod, lorem vel elementum dapibus, nunc justo porta mi, sed tempus est est vel tellus. Nam et enim eleifend, laoreet sem sit amet, elementum sem. Morbi ut leo congue, maximus velit ut, finibus arcu. In et libero cursus, rutrum risus non, molestie leo. Nullam congue quam et volutpat malesuada. Sed risus tortor, pulvinar et dictum nec, sodales non mi. Phasellus lacinia commodo laoreet. Nam mollis, erat in feugiat consectetur, purus eros egestas tellus, in auctor urna odio at nibh. Mauris imperdiet nisi ac magna convallis, at rhoncus ligula cursus.\nCras aliquam rhoncus ipsum, in hendrerit nunc mattis vitae. Duis vitae efficitur metus, ac tempus leo. Cras nec fringilla lacus. Quisque sit amet risus at ipsum pharetra commodo. Sed aliquam mauris at consequat eleifend. Praesent porta, augue sed viverra bibendum, neque ante euismod ante, in vehicula justo lorem ac eros. Suspendisse augue libero, venenatis eget tincidunt ut, malesuada at lorem. Donec vitae bibendum arcu. Aenean maximus nulla non pretium iaculis. Quisque imperdiet, nulla in pulvinar aliquet, velit quam ultrices quam, sit amet fringilla leo sem vel nunc. Mauris in lacinia lacus.\nSuspendisse a tincidunt lacus. Curabitur at urna sagittis, dictum ante sit amet, euismod magna. Sed rutrum massa id tortor commodo, vitae elementum turpis tempus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean purus turpis, venenatis a ullamcorper nec, tincidunt et massa. Integer posuere quam rutrum arcu vehicula imperdiet. Mauris ullamcorper quam vitae purus congue, quis euismod magna eleifend. Vestibulum semper vel augue eget tincidunt. Fusce eget justo sodales, dapibus odio eu, ultrices lorem. Duis condimentum lorem id eros commodo, in facilisis mauris scelerisque. Morbi sed auctor leo. Nullam volutpat a lacus quis pharetra. Nulla congue rutrum magna a ornare.\nAliquam in turpis accumsan, malesuada nibh ut, hendrerit justo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Quisque sed erat nec justo posuere suscipit. Donec ut efficitur arcu, in malesuada neque. Nunc dignissim nisl massa, id vulputate nunc pretium nec. Quisque eget urna in risus suscipit ultricies. Pellentesque odio odio, tincidunt in eleifend sed, posuere a diam. Nam gravida nisl convallis semper elementum. Morbi vitae felis faucibus, vulputate orci placerat, aliquet nisi. Aliquam erat volutpat. Maecenas sagittis pulvinar purus, sed porta quam laoreet at.\nTip 2 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus. Vestibulum sit amet erat at nulla eleifend gravida.\nNullam vel molestie justo. Curabitur vitae efficitur leo. In hac habitasse platea dictumst. Sed pulvinar mauris dui, eget varius purus congue ac. Nulla euismod, lorem vel elementum dapibus, nunc justo porta mi, sed tempus est est vel tellus. Nam et enim eleifend, laoreet sem sit amet, elementum sem. Morbi ut leo congue, maximus velit ut, finibus arcu. In et libero cursus, rutrum risus non, molestie leo. Nullam congue quam et volutpat malesuada. Sed risus tortor, pulvinar et dictum nec, sodales non mi. Phasellus lacinia commodo laoreet. Nam mollis, erat in feugiat consectetur, purus eros egestas tellus, in auctor urna odio at nibh. Mauris imperdiet nisi ac magna convallis, at rhoncus ligula cursus.\nCras aliquam rhoncus ipsum, in hendrerit nunc mattis vitae. Duis vitae efficitur metus, ac tempus leo. Cras nec fringilla lacus. Quisque sit amet risus at ipsum pharetra commodo. Sed aliquam mauris at consequat eleifend. Praesent porta, augue sed viverra bibendum, neque ante euismod ante, in vehicula justo lorem ac eros. Suspendisse augue libero, venenatis eget tincidunt ut, malesuada at lorem. Donec vitae bibendum arcu. Aenean maximus nulla non pretium iaculis. Quisque imperdiet, nulla in pulvinar aliquet, velit quam ultrices quam, sit amet fringilla leo sem vel nunc. Mauris in lacinia lacus.\nSuspendisse a tincidunt lacus. Curabitur at urna sagittis, dictum ante sit amet, euismod magna. Sed rutrum massa id tortor commodo, vitae elementum turpis tempus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean purus turpis, venenatis a ullamcorper nec, tincidunt et massa. Integer posuere quam rutrum arcu vehicula imperdiet. Mauris ullamcorper quam vitae purus congue, quis euismod magna eleifend. Vestibulum semper vel augue eget tincidunt. Fusce eget justo sodales, dapibus odio eu, ultrices lorem. Duis condimentum lorem id eros commodo, in facilisis mauris scelerisque. Morbi sed auctor leo. Nullam volutpat a lacus quis pharetra. Nulla congue rutrum magna a ornare.\nAliquam in turpis accumsan, malesuada nibh ut, hendrerit justo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Quisque sed erat nec justo posuere suscipit. Donec ut efficitur arcu, in malesuada neque. Nunc dignissim nisl massa, id vulputate nunc pretium nec. Quisque eget urna in risus suscipit ultricies. Pellentesque odio odio, tincidunt in eleifend sed, posuere a diam. Nam gravida nisl convallis semper elementum. Morbi vitae felis faucibus, vulputate orci placerat, aliquet nisi. Aliquam erat volutpat. Maecenas sagittis pulvinar purus, sed porta quam laoreet at.\n","date":1557010800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1557010800,"objectID":"74533bae41439377bd30f645c4677a27","permalink":"/courses/example/example1/","publishdate":"2019-05-05T00:00:00+01:00","relpermalink":"/courses/example/example1/","section":"courses","summary":"In this tutorial, I\u0026rsquo;ll share my top 10 tips for getting started with Academic:\nTip 1 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum.","tags":null,"title":"Example Page 1","type":"docs"},{"authors":null,"categories":null,"content":"Here are some more tips for getting started with Academic:\nTip 3 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus. Vestibulum sit amet erat at nulla eleifend gravida.\nNullam vel molestie justo. Curabitur vitae efficitur leo. In hac habitasse platea dictumst. Sed pulvinar mauris dui, eget varius purus congue ac. Nulla euismod, lorem vel elementum dapibus, nunc justo porta mi, sed tempus est est vel tellus. Nam et enim eleifend, laoreet sem sit amet, elementum sem. Morbi ut leo congue, maximus velit ut, finibus arcu. In et libero cursus, rutrum risus non, molestie leo. Nullam congue quam et volutpat malesuada. Sed risus tortor, pulvinar et dictum nec, sodales non mi. Phasellus lacinia commodo laoreet. Nam mollis, erat in feugiat consectetur, purus eros egestas tellus, in auctor urna odio at nibh. Mauris imperdiet nisi ac magna convallis, at rhoncus ligula cursus.\nCras aliquam rhoncus ipsum, in hendrerit nunc mattis vitae. Duis vitae efficitur metus, ac tempus leo. Cras nec fringilla lacus. Quisque sit amet risus at ipsum pharetra commodo. Sed aliquam mauris at consequat eleifend. Praesent porta, augue sed viverra bibendum, neque ante euismod ante, in vehicula justo lorem ac eros. Suspendisse augue libero, venenatis eget tincidunt ut, malesuada at lorem. Donec vitae bibendum arcu. Aenean maximus nulla non pretium iaculis. Quisque imperdiet, nulla in pulvinar aliquet, velit quam ultrices quam, sit amet fringilla leo sem vel nunc. Mauris in lacinia lacus.\nSuspendisse a tincidunt lacus. Curabitur at urna sagittis, dictum ante sit amet, euismod magna. Sed rutrum massa id tortor commodo, vitae elementum turpis tempus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean purus turpis, venenatis a ullamcorper nec, tincidunt et massa. Integer posuere quam rutrum arcu vehicula imperdiet. Mauris ullamcorper quam vitae purus congue, quis euismod magna eleifend. Vestibulum semper vel augue eget tincidunt. Fusce eget justo sodales, dapibus odio eu, ultrices lorem. Duis condimentum lorem id eros commodo, in facilisis mauris scelerisque. Morbi sed auctor leo. Nullam volutpat a lacus quis pharetra. Nulla congue rutrum magna a ornare.\nAliquam in turpis accumsan, malesuada nibh ut, hendrerit justo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Quisque sed erat nec justo posuere suscipit. Donec ut efficitur arcu, in malesuada neque. Nunc dignissim nisl massa, id vulputate nunc pretium nec. Quisque eget urna in risus suscipit ultricies. Pellentesque odio odio, tincidunt in eleifend sed, posuere a diam. Nam gravida nisl convallis semper elementum. Morbi vitae felis faucibus, vulputate orci placerat, aliquet nisi. Aliquam erat volutpat. Maecenas sagittis pulvinar purus, sed porta quam laoreet at.\nTip 4 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus. Vestibulum sit amet erat at nulla eleifend gravida.\nNullam vel molestie justo. Curabitur vitae efficitur leo. In hac habitasse platea dictumst. Sed pulvinar mauris dui, eget varius purus congue ac. Nulla euismod, lorem vel elementum dapibus, nunc justo porta mi, sed tempus est est vel tellus. Nam et enim eleifend, laoreet sem sit amet, elementum sem. Morbi ut leo congue, maximus velit ut, finibus arcu. In et libero cursus, rutrum risus non, molestie leo. Nullam congue quam et volutpat malesuada. Sed risus tortor, pulvinar et dictum nec, sodales non mi. Phasellus lacinia commodo laoreet. Nam mollis, erat in feugiat consectetur, purus eros egestas tellus, in auctor urna odio at nibh. Mauris imperdiet nisi ac magna convallis, at rhoncus ligula cursus.\nCras aliquam rhoncus ipsum, in hendrerit nunc mattis vitae. Duis vitae efficitur metus, ac tempus leo. Cras nec fringilla lacus. Quisque sit amet risus at ipsum pharetra commodo. Sed aliquam mauris at consequat eleifend. Praesent porta, augue sed viverra bibendum, neque ante euismod ante, in vehicula justo lorem ac eros. Suspendisse augue libero, venenatis eget tincidunt ut, malesuada at lorem. Donec vitae bibendum arcu. Aenean maximus nulla non pretium iaculis. Quisque imperdiet, nulla in pulvinar aliquet, velit quam ultrices quam, sit amet fringilla leo sem vel nunc. Mauris in lacinia lacus.\nSuspendisse a tincidunt lacus. Curabitur at urna sagittis, dictum ante sit amet, euismod magna. Sed rutrum massa id tortor commodo, vitae elementum turpis tempus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean purus turpis, venenatis a ullamcorper nec, tincidunt et massa. Integer posuere quam rutrum arcu vehicula imperdiet. Mauris ullamcorper quam vitae purus congue, quis euismod magna eleifend. Vestibulum semper vel augue eget tincidunt. Fusce eget justo sodales, dapibus odio eu, ultrices lorem. Duis condimentum lorem id eros commodo, in facilisis mauris scelerisque. Morbi sed auctor leo. Nullam volutpat a lacus quis pharetra. Nulla congue rutrum magna a ornare.\nAliquam in turpis accumsan, malesuada nibh ut, hendrerit justo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Quisque sed erat nec justo posuere suscipit. Donec ut efficitur arcu, in malesuada neque. Nunc dignissim nisl massa, id vulputate nunc pretium nec. Quisque eget urna in risus suscipit ultricies. Pellentesque odio odio, tincidunt in eleifend sed, posuere a diam. Nam gravida nisl convallis semper elementum. Morbi vitae felis faucibus, vulputate orci placerat, aliquet nisi. Aliquam erat volutpat. Maecenas sagittis pulvinar purus, sed porta quam laoreet at.\n","date":1557010800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1557010800,"objectID":"1c2b5a11257c768c90d5050637d77d6a","permalink":"/courses/example/example2/","publishdate":"2019-05-05T00:00:00+01:00","relpermalink":"/courses/example/example2/","section":"courses","summary":"Here are some more tips for getting started with Academic:\nTip 3 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum.","tags":null,"title":"Example Page 2","type":"docs"},{"authors":[],"categories":null,"content":" Click on the Slides button above to view the built-in slides feature.   Slides can be added in a few ways:\n Create slides using Academic\u0026rsquo;s Slides feature and link using slides parameter in the front matter of the talk file Upload an existing slide deck to static/ and link using url_slides parameter in the front matter of the talk file Embed your slides (e.g. Google Slides) or presentation video on this page using shortcodes.  Further talk details can easily be added to this page using Markdown and $\\rm \\LaTeX$ math code.\n","date":1906549200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1906549200,"objectID":"96344c08df50a1b693cc40432115cbe3","permalink":"/talk/example/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/talk/example/","section":"talk","summary":"An example talk using Academic's Markdown slides feature.","tags":[],"title":"Example Talk","type":"talk"},{"authors":null,"categories":null,"content":" Passwords. Keys to our riches, or our personal info. Equivalent to the keys to a safe box if this was 1967. But its 2020, so you’ve put most of your stuff online. But how secure are your passwords? Let me guess; it’s your phone number! Or a combo of your first name and your year of birth! But probably not. You probably have invested time to think and come up with a strong password. But how strong is it anyway? Have you tried running it in a password meter? I don’t know, but I hope you got it right. Anyway, I needed a password meter. I wanted to know how strong or weak my password was. That’s how I came across http://www.passwordmeter.com/. The site indicated how the calculations were made, which I found interesting. I thought about doing it in R, because it was all about REGEX, and I enjoy dealing with strings. At that moment, I couldn’t do much, but finally, here we are!\nThere are really no given set of rules or requirements for a password. This varies typically from website to website. However, we can say with some substantial level of confidence that the rules below are most common. An acceptable password;\n Must have a minimum of 8 characters Contains at least each of the following;  Upper case letter Lower case letter Number Symbol   For the password meter above and this post, the rules that will be used are\n A minimum of 8 characters. This is mandatory. Even if all other requirements are met, and this is not, there will be no score for requirements (we’ll see that later) Contains 3/4 of the following  Upper case letter Lower case letter Number Symbol   To determine the password strength, some patterns in the password will lead to the addition of points, while others will lead to deductions. When we tackle each pattern, we’ll explore how it contributes to the password meter.\nThese are the patterns that result in additions.\n Requirements stated above Number of Characters Uppercase Letters Lowercase Letters Numbers Symbols Middle Numbers or Symbols  These are the patterns that lead to deductions.\n Letters only Numbers only Repeat Characters (Case Insensitive) Consecutive Uppercase Letters\n Consecutive Lowercase Letters\n Consecutive Numbers\n Sequential Letters (3+)\n Sequential Numbers (3+)\n Sequential Symbols (3+)  For each (addition and subtraction), we will get the count and, in the end, find the total. We will then create a function that takes in the password and returns the score of every pattern. For each pattern, we will use relevant examples to see how the output will look like.\nLoading required libraries;\nlibrary(stringi) library(stringr) Addition Number of Characters\npassword = \u0026quot;PasswordTest34#\u0026quot; num_chars = nchar(password) num_chars ## [1] 15 Uppercase Letters\nupper_case = stringi::stri_count(password, regex = \u0026quot;[A-Z]\u0026quot;) upper_case ## [1] 2 Lowercase Letters\nlower_case = stringi::stri_count(password, regex = \u0026quot;[a-z]\u0026quot;) lower_case ## [1] 10 Numbers\nnums = stringi::stri_count(password, regex = \u0026quot;[0-9]\u0026quot;) nums ## [1] 2 Symbols\nHere, we create a vector that contains all the possibly symbols (or at least all possible symbols I could trace. Forgive me if I repeated any)\nsymbols = c(\u0026quot;~\u0026quot;, \u0026quot;!\u0026quot;, \u0026quot;@\u0026quot;, \u0026quot;#\u0026quot;, \u0026quot;\\\\$\u0026quot;, \u0026quot;%\u0026quot;, \u0026quot;\\\\^\u0026quot;, \u0026quot;\u0026amp;\u0026quot;, \u0026quot;\\\\*\u0026quot;, \u0026quot;\\\\(\u0026quot; ,\u0026quot;\\\\)\u0026quot;, \u0026quot;-\u0026quot;, \u0026quot;\\\\+\u0026quot;, \u0026quot;\\\\_\u0026quot;, \u0026quot;=\u0026quot;, \u0026quot;`\u0026quot; , \u0026quot;\\\\{\u0026quot; ,\u0026quot;\\\\}\u0026quot; ,\u0026quot;\\\\[\u0026quot; ,\u0026quot;\\\\]\u0026quot;,\u0026quot;:\u0026quot;, \u0026quot;;\u0026quot; , \u0026quot;\u0026lt;\u0026quot; , \u0026quot;\u0026gt;\u0026quot;, \u0026quot;\\\\?\u0026quot; ,\u0026quot;,\u0026quot; ,\u0026quot;\\\\.\u0026quot;, \u0026quot;\\\\\u0026#39;\u0026quot;, \u0026quot;@\u0026quot;, \u0026quot;#\u0026quot;, noquote(\u0026quot;\\\u0026quot;\u0026quot;)) We then look for the count of these symbols in the password\nnum_symbols = stringr::str_count(password, paste(symbols, collapse = \u0026quot;|\u0026quot;)) num_symbols ## [1] 1 Mid numbers and symbols\nTo get the number of middle symbols and numbers, we first eliminate the first and last characters, then count the number of numbers and symbols\nmid_chars = gsub(\u0026#39;^.|.$\u0026#39;, \u0026#39;\u0026#39;, password) mid_chars ## [1] \u0026quot;asswordTest34\u0026quot; midnums = stringi::stri_count(mid_chars, regex = \u0026quot;[0-9]\u0026quot;) midnums ## [1] 2 mid_symbols = stringr::str_count(mid_chars, paste(symbols, collapse = \u0026quot;|\u0026quot;)) mid_symbols ## [1] 0 All good! Now its time to create the actual scores from these counts. Some conditions will have to be met for some of these to apply, while others will not require any condition.\nThe requirements score is a tricky one. For the requirements score to exist, the mandatory requirement of 8 characters should be met and the 3 out of 4 other requirements. If any misses, then its a zero. So we will,\nCreate a vector that contains the four requirements (requirements) from which at least three should be met. Create a requirements score (requirements_score) vector and set it at zero. Loop over the vector (requirements), when a value is greater than 1 (meaning the requirement has been met), we increase the requirement score by 1 Check whether the password has more than eight characters. If not, we set the requirements score to 0. If the count is greater than 8, we check whether the requirement score coming from the loop above is greater than or equal to three. If so, then we add 1 to the requirement score (since the password has more than eight characters) then multiply by 2.  requirements = c(upper_case, lower_case, nums, num_symbols) requirements ## [1] 2 10 2 1 requirements_score = 0 for (i in requirements) { if(i \u0026gt; 0) requirements_score = requirements_score + 1 } requirements_score ## [1] 4 requirements_score = ifelse(num_chars \u0026lt; 8, 0, ifelse((requirements_score) \u0026gt;= 3, (requirements_score + 1) * 2, 0)) requirements_score ## [1] 10 The character count score is 4 times the number of characters\ncharacter_count_score = (num_chars * 4) character_count_score ## [1] 60 The upper case score will only apply if the password contains upper case letters. If there are no upper case letters, the score will be zero. Otherwise, the score will be the difference of the number of characters and the number of uppercase letters multiplied by two.\nupper_case_score = ifelse(upper_case == 0, 0, ((num_chars - upper_case)*2)) upper_case_score ## [1] 26 The lower case score will be similar to the upper case score\nlower_case_score = ifelse(lower_case == 0, 0, ((num_chars - lower_case)*2)) lower_case_score ## [1] 10 The numbers score is 4 times the number of numbers in the password.However, it only applys if the password has other characters apart from numbers\nnumbers_score = ifelse(upper_case \u0026gt; 0 | lower_case \u0026gt; 0 | num_symbols \u0026gt; 0, (nums * 4), 0) numbers_score ## [1] 8 The symbols score will be six times the count of symbols\nsymbols_score = num_symbols * 6 symbols_score ## [1] 6 The mid number and symbol score will be twice the count of numbers and symbols in the middle\nmid_nums_symbol_score = ((midnums + mid_symbols) * 2) mid_nums_symbol_score ## [1] 4 We now add together all the addition scores and store them\ntotal_additions = 0 + requirements_score + character_count_score + upper_case_score + lower_case_score + numbers_score + symbols_score + mid_nums_symbol_score total_additions ## [1] 124  Subtraction Now, lets explore the patterns that lead to deductions. Some are straight forward, but most of them will require us to do something extra! But we are up to the task!\nletters only\nThere will be deduction if the password has letters only. To check this, we can compare the number of characters and the number of uppercase and lowercase letters\nletters_only = ifelse(num_chars == (upper_case + lower_case), num_chars, 0) letters_only ## [1] 0 numbers only\nnumbers_only = ifelse(num_chars == (nums), num_chars, 0) numbers_only ## [1] 0 consecutive uppercase letters\nHere, we will a password that has consecutive uppercase letters i.e. PASSwordTEst34#, then we will:\nfirst create a function that takes in our password and returns a vector with each character as an object of the vector.  password = \u0026quot;PASSwordTEst34#\u0026quot; split_function = function(password){ password = str_extract_all(password, paste(c(\u0026quot;[a-z]\u0026quot;, \u0026quot;[A-Z]\u0026quot;, \u0026quot;[0-9]\u0026quot;, symbols), collapse = \u0026quot;|\u0026quot;)) password = password[[1]] return(password) } split_pass = split_function(password) split_pass ## [1] \u0026quot;P\u0026quot; \u0026quot;A\u0026quot; \u0026quot;S\u0026quot; \u0026quot;S\u0026quot; \u0026quot;w\u0026quot; \u0026quot;o\u0026quot; \u0026quot;r\u0026quot; \u0026quot;d\u0026quot; \u0026quot;T\u0026quot; \u0026quot;E\u0026quot; \u0026quot;s\u0026quot; \u0026quot;t\u0026quot; \u0026quot;3\u0026quot; \u0026quot;4\u0026quot; \u0026quot;#\u0026quot; We check for uppercase letters. We want to return 1 if it is an uppercase letter and 0 if not  consecutive_upper = ifelse(split_pass %in% LETTERS, 1, 0) consecutive_upper ## [1] 1 1 1 1 0 0 0 0 1 1 0 0 0 0 0 Now, we want to know how many consecutive zeros and ones are there in our output. The function below will return values and their lengths. For instance, we get that 1 has been repeated four times, then 0 four times, 1 two times and and 0 five times.  r = rle(consecutive_upper) r ## Run Length Encoding ## lengths: int [1:4] 4 4 2 5 ## values : num [1:4] 1 0 1 0 We are interested in the 1s, that translate to uppercase letters as we saw above. We will therefore extract where the value is 1. Further, for it to be considered consecutive, there must be 2 or more in the length. If three letters are consecutive, the length above will be 3, but ideally thats two cases of consecutive letters. Therefore, while extracting, we will subtract one.  consecutive_upper = (r$lengths[r$values == 1]) - 1 consecutive_upper ## [1] 3 1 The output above is the number of times there are consecutive uppercase letters in different instances. So the sum will give us the total instances of consecutive uppercase letters.  consecutive_upper = sum(consecutive_upper) consecutive_upper ## [1] 4 Lowercase letters\nThe above procedure is repeated to get the total number of instances with consecutive lowercase letters\nsplit_pass = split_function(password) consecutive_lower = ifelse(split_pass %in% letters, 1, 0) r = rle(consecutive_lower) consecutive_lower = (r$lengths[r$values == 1]) - 1 consecutive_lower = sum(consecutive_lower) consecutive_lower ## [1] 4 Consecutive numbers\nsplit_pass = split_function(password) consecutive_numbers = ifelse(split_pass %in% (0:9), 1, 0) r = rle(consecutive_numbers) consecutive_numbers = (r$lengths[r$values == 1]) - 1 consecutive_numbers = sum(consecutive_numbers) consecutive_numbers ## [1] 1 Letters, numbers, and symbols sequence\nHere, we want to check for any sequential letters, which respect to the alphabet regardless of the case. For it to be a sequence, the minimum sequential letters that must be there is 3. For instance, if the password is “abcdef”, then the instances of sequential letters are abc, bcd, cde, and def. i.e. four instances. The sequence can also be in reverse order. For instance, “mlkji” is still a sequence! The same case applies to numbers (0-9) and symbols (~ to +) To achieve this, we will;\nFor letters, we will first get the position in the alphabet irrespective of the case. If the character is not in the alphabet, we will get a zero.  password = \u0026quot;uVwxYz123$EDcba!@#\u0026quot; split_pass =split_function(password) split_pass ## [1] \u0026quot;u\u0026quot; \u0026quot;V\u0026quot; \u0026quot;w\u0026quot; \u0026quot;x\u0026quot; \u0026quot;Y\u0026quot; \u0026quot;z\u0026quot; \u0026quot;1\u0026quot; \u0026quot;2\u0026quot; \u0026quot;3\u0026quot; \u0026quot;$\u0026quot; \u0026quot;E\u0026quot; \u0026quot;D\u0026quot; \u0026quot;c\u0026quot; \u0026quot;b\u0026quot; \u0026quot;a\u0026quot; \u0026quot;!\u0026quot; \u0026quot;@\u0026quot; \u0026quot;#\u0026quot; sequence_check = ifelse(tolower(split_pass) %in% letters, match(tolower(split_pass), letters), 0) sequence_check ## [1] 21 22 23 24 25 26 0 0 0 0 5 4 3 2 1 0 0 0 We will then absolute get the difference of the output above. The absolute will take care of reverse sequence.  sequence_check = abs(diff(sequence_check)) sequence_check ## [1] 1 1 1 1 1 26 0 0 0 5 1 1 1 1 1 0 0 Now, if there was a sequence, the difference above will be 1. We now change everything else that is not a 1 to a zero.  sequence_check = ifelse(sequence_check == 1, 1, 0) sequence_check ## [1] 1 1 1 1 1 0 0 0 0 0 1 1 1 1 1 0 0 Cool! Now we can find do like we did before, see how many times each was repeated, and have the output looking like a summary.  r = rle(sequence_check) r ## Run Length Encoding ## lengths: int [1:4] 5 5 5 2 ## values : num [1:4] 1 0 1 0 Again, we are interested in ones only, so we extract from the output above cases where the value is one, and we deduct 1  sequence_check = (r$lengths[r$values == 1]) - 1 sequence_check ## [1] 4 4 We do a sum of the output to get the total number of instances a sequence occurs  sequence_check = sum(sequence_check) sequence_check ## [1] 8 Finally, for efficiency, we put all these steps into a function. The function takes in the splitted password e and the variable type The variable type will be either letters, numbers or symbols. The function returns the total instances a sequence occurs  sequence_checker = function(split_pass, var_type) { if(var_type == \u0026quot;numbers\u0026quot;){ sequence_check = as.integer(ifelse(split_pass %in% (0:9), split_pass, 0)) } else if (var_type == \u0026quot;symbols\u0026quot;){ sequence_check = ifelse(split_pass %in% symbols[1:13], match(split_pass, symbols[1:13]), 0) } else { sequence_check = ifelse(tolower(split_pass) %in% letters, match(tolower(split_pass), letters), 0) } sequence_check = abs(diff(sequence_check)) sequence_check = ifelse(sequence_check == 1, 1, 0) r = rle(sequence_check) sequence_check = (r$lengths[r$values == 1]) - 1 sequence_check = sum(sequence_check) return(sequence_check) } sequential letters\nsplit_pass ## [1] \u0026quot;u\u0026quot; \u0026quot;V\u0026quot; \u0026quot;w\u0026quot; \u0026quot;x\u0026quot; \u0026quot;Y\u0026quot; \u0026quot;z\u0026quot; \u0026quot;1\u0026quot; \u0026quot;2\u0026quot; \u0026quot;3\u0026quot; \u0026quot;$\u0026quot; \u0026quot;E\u0026quot; \u0026quot;D\u0026quot; \u0026quot;c\u0026quot; \u0026quot;b\u0026quot; \u0026quot;a\u0026quot; \u0026quot;!\u0026quot; \u0026quot;@\u0026quot; \u0026quot;#\u0026quot; sequence_letters = sequence_checker(split_pass, \u0026quot;letters\u0026quot;) sequence_letters ## [1] 8 sequential numbers\nsequence_num = sequence_checker(split_pass, \u0026quot;numbers\u0026quot;) sequence_num ## [1] 2 sequential symbols\nsequence_symbols = sequence_checker(split_pass, \u0026quot;symbols\u0026quot;) sequence_symbols ## [1] 1 Just like we saw in additions, substraction scores will also be calculated using the counts we have generated above. The chunk below shows how each score will be calculated. They will then be added and resulting score stored and used to calculate the total score.\nletters_only_score = letters_only numbers_only_score = numbers_only consecutive_upper_score = consecutive_upper * 2 consecutive_lower_score = consecutive_lower * 2 consecutive_numbers_score = consecutive_numbers * 2 sequence_letters_score = sequence_letters * 3 sequence_num_score = sequence_num * 3 sequence_symbols_score = sequence_symbols * 3 total_deductions = letters_only_score + numbers_only_score + consecutive_upper_score + consecutive_lower_score + consecutive_numbers_score + sequence_letters_score + sequence_num_score + sequence_symbols_score total_deductions  ## [1] 51 We now have the total addition and total deductions. Now, the password strength is supposed to range between 0 and 100. From our calculations, it is possible to get a negative score, as well as a score above 100. Therefore, should a score be less than 0, we want that to be o and if it is greater than 100, we want that to be 100. Otherwise, the total score is given by total additions - total deductions\ntotal_score = ifelse((total_additions - total_additions) \u0026lt; 0 , 0, ifelse((total_additions - total_additions) \u0026gt; 100, 100, (total_additions - total_additions))) We can now put all these together in a function and try a few passwords and see the output\ncat(password_strength(\u0026quot;PasswordTest34#\u0026quot;)) ## Additions ## Number of characters: 60 ## Upper case characters:26 ## Lower case characters: 10 ## Numbers: 8 ## Symbols: 6 ## Middle Numbers and symbols: 4 ## Requirements: 10 ## ## Deductions ## Letters only: 0 ## Numbers only: 0 ## Consecutive upper: 0 ## Consecutive lower: 16 ## Consecutive numbers: 2 ## Sequence letters: 0 ## Sequence numbers: 0 ## Sequence symbols: 0 ## ## Total score: 100 cat(password_strength(\u0026quot;Enter4\u0026quot;)) ## Additions ## Number of characters: 24 ## Upper case characters:10 ## Lower case characters: 4 ## Numbers: 4 ## Symbols: 0 ## Middle Numbers and symbols: 0 ## Requirements: 0 ## ## Deductions ## Letters only: 0 ## Numbers only: 0 ## Consecutive upper: 0 ## Consecutive lower: 6 ## Consecutive numbers: 0 ## Sequence letters: 0 ## Sequence numbers: 0 ## Sequence symbols: 0 ## ## Total score: 36  Conclusion We were able to build our own password meter in R! However, there is something slight missing, which I am still trying to figure out. In the website, there is a deduction called “Repeat Characters (Case Insensitive)”. I still haven’t figured out how it was arrived at. If you can, please try it out. You can inspect the page and check the code.\nHaving done that, I am really pleased with myself, and if you have followed this post at to this point, I am grateful that you took your time. In the process, I learnt a lot of cool stuff to do with strings, and I hope you have too. In case of suggestions or questions feel free to hit me up, and until next time, bye for now!\n ","date":1590019200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1590019200,"objectID":"7b000118260e3adefaeab913c7dfddc0","permalink":"/post/password-meter-in-r/","publishdate":"2020-05-21T00:00:00Z","relpermalink":"/post/password-meter-in-r/","section":"post","summary":"Passwords. Keys to our riches, or our personal info. Equivalent to the keys to a safe box if this was 1967. But its 2020, so you’ve put most of your stuff online.","tags":null,"title":"Password Strength Meter in R","type":"post"},{"authors":["Martin Wanjiru"],"categories":null,"content":" Click the Slides button above to demo Academic\u0026rsquo;s Markdown slides feature.   Supplementary notes can be added here, including code and math.\n","date":1554595200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1554595200,"objectID":"557dc08fd4b672a0c08e0a8cf0c9ff7d","permalink":"/publication/preprint/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/publication/preprint/","section":"publication","summary":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum.","tags":["Source Themes"],"title":"An example preprint / working paper","type":"publication"},{"authors":[],"categories":[],"content":"Create slides in Markdown with Academic  Academic | Documentation\n Features  Efficiently write slides in Markdown 3-in-1: Create, Present, and Publish your slides Supports speaker notes Mobile friendly slides   Controls  Next: Right Arrow or Space Previous: Left Arrow Start: Home Finish: End Overview: Esc Speaker notes: S Fullscreen: F Zoom: Alt + Click  PDF Export: E   Code Highlighting Inline code: variable\nCode block:\nporridge = \u0026quot;blueberry\u0026quot; if porridge == \u0026quot;blueberry\u0026quot;: print(\u0026quot;Eating...\u0026quot;)   Math In-line math: $x + y = z$\nBlock math:\n$$ f\\left( x \\right) = ;\\frac{{2\\left( {x + 4} \\right)\\left( {x - 4} \\right)}}{{\\left( {x + 4} \\right)\\left( {x + 1} \\right)}} $$\n Fragments Make content appear incrementally\n{{% fragment %}} One {{% /fragment %}} {{% fragment %}} **Two** {{% /fragment %}} {{% fragment %}} Three {{% /fragment %}}  Press Space to play!\nOne  Two  Three \n A fragment can accept two optional parameters:\n class: use a custom style (requires definition in custom CSS) weight: sets the order in which a fragment appears   Speaker Notes Add speaker notes to your presentation\n{{% speaker_note %}} - Only the speaker can read these notes - Press `S` key to view {{% /speaker_note %}}  Press the S key to view the speaker notes!\n Only the speaker can read these notes Press S key to view    Themes  black: Black background, white text, blue links (default) white: White background, black text, blue links league: Gray background, white text, blue links beige: Beige background, dark text, brown links sky: Blue background, thin dark text, blue links    night: Black background, thick white text, orange links serif: Cappuccino background, gray text, brown links simple: White background, black text, blue links solarized: Cream-colored background, dark green text, blue links   Custom Slide Customize the slide style and background\n{{\u0026lt; slide background-image=\u0026quot;/img/boards.jpg\u0026quot; \u0026gt;}} {{\u0026lt; slide background-color=\u0026quot;#0000FF\u0026quot; \u0026gt;}} {{\u0026lt; slide class=\u0026quot;my-style\u0026quot; \u0026gt;}}   Custom CSS Example Let\u0026rsquo;s make headers navy colored.\nCreate assets/css/reveal_custom.css with:\n.reveal section h1, .reveal section h2, .reveal section h3 { color: navy; }   Questions?  Ask\n Documentation\n","date":1549324800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1549324800,"objectID":"0e6de1a61aa83269ff13324f3167c1a9","permalink":"/slides/example/","publishdate":"2019-02-05T00:00:00Z","relpermalink":"/slides/example/","section":"slides","summary":"An introduction to using Academic's Slides feature.","tags":[],"title":"Slides","type":"slides"},{"authors":null,"categories":null,"content":"","date":1461715200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1461715200,"objectID":"d1311ddf745551c9e117aa4bb7e28516","permalink":"/project/external-project/","publishdate":"2016-04-27T00:00:00Z","relpermalink":"/project/external-project/","section":"project","summary":"An example of linking directly to an external project website using `external_link`.","tags":["Demo"],"title":"External Project","type":"project"},{"authors":null,"categories":null,"content":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus. Vestibulum sit amet erat at nulla eleifend gravida.\nNullam vel molestie justo. Curabitur vitae efficitur leo. In hac habitasse platea dictumst. Sed pulvinar mauris dui, eget varius purus congue ac. Nulla euismod, lorem vel elementum dapibus, nunc justo porta mi, sed tempus est est vel tellus. Nam et enim eleifend, laoreet sem sit amet, elementum sem. Morbi ut leo congue, maximus velit ut, finibus arcu. In et libero cursus, rutrum risus non, molestie leo. Nullam congue quam et volutpat malesuada. Sed risus tortor, pulvinar et dictum nec, sodales non mi. Phasellus lacinia commodo laoreet. Nam mollis, erat in feugiat consectetur, purus eros egestas tellus, in auctor urna odio at nibh. Mauris imperdiet nisi ac magna convallis, at rhoncus ligula cursus.\nCras aliquam rhoncus ipsum, in hendrerit nunc mattis vitae. Duis vitae efficitur metus, ac tempus leo. Cras nec fringilla lacus. Quisque sit amet risus at ipsum pharetra commodo. Sed aliquam mauris at consequat eleifend. Praesent porta, augue sed viverra bibendum, neque ante euismod ante, in vehicula justo lorem ac eros. Suspendisse augue libero, venenatis eget tincidunt ut, malesuada at lorem. Donec vitae bibendum arcu. Aenean maximus nulla non pretium iaculis. Quisque imperdiet, nulla in pulvinar aliquet, velit quam ultrices quam, sit amet fringilla leo sem vel nunc. Mauris in lacinia lacus.\nSuspendisse a tincidunt lacus. Curabitur at urna sagittis, dictum ante sit amet, euismod magna. Sed rutrum massa id tortor commodo, vitae elementum turpis tempus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean purus turpis, venenatis a ullamcorper nec, tincidunt et massa. Integer posuere quam rutrum arcu vehicula imperdiet. Mauris ullamcorper quam vitae purus congue, quis euismod magna eleifend. Vestibulum semper vel augue eget tincidunt. Fusce eget justo sodales, dapibus odio eu, ultrices lorem. Duis condimentum lorem id eros commodo, in facilisis mauris scelerisque. Morbi sed auctor leo. Nullam volutpat a lacus quis pharetra. Nulla congue rutrum magna a ornare.\nAliquam in turpis accumsan, malesuada nibh ut, hendrerit justo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Quisque sed erat nec justo posuere suscipit. Donec ut efficitur arcu, in malesuada neque. Nunc dignissim nisl massa, id vulputate nunc pretium nec. Quisque eget urna in risus suscipit ultricies. Pellentesque odio odio, tincidunt in eleifend sed, posuere a diam. Nam gravida nisl convallis semper elementum. Morbi vitae felis faucibus, vulputate orci placerat, aliquet nisi. Aliquam erat volutpat. Maecenas sagittis pulvinar purus, sed porta quam laoreet at.\n","date":1461715200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1461715200,"objectID":"8f66d660a9a2edc2d08e68cc30f701f7","permalink":"/project/internal-project/","publishdate":"2016-04-27T00:00:00Z","relpermalink":"/project/internal-project/","section":"project","summary":"An example of using the in-built project page.","tags":["Deep Learning"],"title":"Internal Project","type":"project"},{"authors":["Martin Wanjiru","Robert Ford"],"categories":null,"content":" Click the Cite button above to demo the feature to enable visitors to import publication metadata into their reference management software.    Click the Slides button above to demo Academic\u0026rsquo;s Markdown slides feature.   Supplementary notes can be added here, including code and math.\n","date":1441065600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1441065600,"objectID":"966884cc0d8ac9e31fab966c4534e973","permalink":"/publication/journal-article/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/publication/journal-article/","section":"publication","summary":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum.","tags":["Source Themes"],"title":"An example journal article","type":"publication"},{"authors":["Martin Wanjiru","Robert Ford"],"categories":null,"content":" Click the Cite button above to demo the feature to enable visitors to import publication metadata into their reference management software.    Click the Slides button above to demo Academic\u0026rsquo;s Markdown slides feature.   Supplementary notes can be added here, including code and math.\n","date":1372636800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1372636800,"objectID":"69425fb10d4db090cfbd46854715582c","permalink":"/publication/conference-paper/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/publication/conference-paper/","section":"publication","summary":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum.","tags":["Source Themes"],"title":"An example conference paper","type":"publication"}]